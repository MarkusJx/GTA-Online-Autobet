name: autobet-build

on:
  push:
    paths: 
      - ".github/workflows/build.yml"
      - "autobetLib/**"
      - "pack/**"
      - "ui/**"
      - "web/**"
      - "resources/**"
      - "package.json"
      - "package-lock.json"
      - "main.js"
      - "preload.js"
      - "renderer.js"
      - "downloadModel.js"
  pull_request:
    paths: 
      - ".github/workflows/build.yml"
      - "autobetLib/**"
      - "pack/**"
      - "ui/**"
      - "web/**"
      - "resources/**"
      - "package.json"
      - "package-lock.json"
      - "main.js"
      - "preload.js"
      - "renderer.js"
      - "downloadModel.js"

jobs:
  build_and_pack:
    runs-on: windows-latest
    env:
      OPENCV_VERSION: 4.1.2
      OpenCV_DIR: C:/tools/opencv/build

    steps:
    - uses: actions/checkout@v2

    - name: Get latest release tag
      id: latest_release
      run: echo "::set-output name=release::$(node -p 'require(`./package.json`).version')"
      shell: bash
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d.1%H%M%S')"
      shell: bash
    - name: Set version name
      id: version_name
      run: echo "::set-output name=version::autobet-${{steps.latest_release.outputs.release}}-beta.${{steps.date.outputs.date}}"
      shell: bash
    - name: Print version name
      run: echo ${{steps.version_name.outputs.version}}
      shell: bash
    
    # Retrieve caches
    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: |
          ~\AppData\Roaming\npm-cache
          **\node_modules
          autobetLib\node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**\package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Download and install opencv
    - name: Install OpenCV
      run: choco install opencv --version ${{env.OPENCV_VERSION}} -y

    # Set the autobet package version using npm
    - name: Set autobet version
      run: npm version --no-git-tag-version ${{steps.latest_release.outputs.release}}-beta.${{steps.date.outputs.date}} -f
    
    # Build steps
    # Runs 'npm install' and 'npm run-script pack'
    # To install all dependencies and package the application
    - name: Run npm install
      run: npm install
    - name: Build
      run: npm run-script build
    - name: Package
      run: npm run-script pack
      env:
        GH_TOKEN: ${{secrets.github_token}}
    
    # Upload the artifact
    - name: Upload beta build
      uses: actions/upload-artifact@v1
      with:
        name: ${{steps.version_name.outputs.version}}
        path: dist/autobet-v${{steps.latest_release.outputs.release}}-beta.${{steps.date.outputs.date}}.exe
