name: autobet-build

on:
  push:
    paths: 
      - ".github/workflows/build.yml"
      - "autobetLib/**"
      - "pack/**"
      - "ui/**"
      - "web/**"
      - "resources/**"
      - "package.json"
      - "package-lock.json"
      - "main.js"
      - "preload.js"
      - "renderer.js"
      - "downloadModel.js"
  pull_request:
    paths: 
      - ".github/workflows/build.yml"
      - "autobetLib/**"
      - "pack/**"
      - "ui/**"
      - "web/**"
      - "resources/**"
      - "package.json"
      - "package-lock.json"
      - "main.js"
      - "preload.js"
      - "renderer.js"
      - "downloadModel.js"

jobs:
  build_and_pack:
    runs-on: windows-latest
    env:
      BOOST_VERSION: 1.69.0
      BOOST_TOOLSET: msvc14.1
      BOOST_PATH: D:\boost\boost-1.69.0-win32-msvc14.1-x86_64

    steps:
    - uses: actions/checkout@v2
    
    # Steps for getting the name for this artifact
    # The artifact name has the followig format:
    # autobet-${LATEST_RELEASE_TAG}-YYYYmmdd-HHMMSS
    - name: Get latest release tag
      id: latest_release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: MarkusJx
        repo: autobet
        excludes: prerelease, draft
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d.%H%M%S')"
      shell: bash
    - name: Set version name
      id: version_name
      run: echo "::set-output name=version::autobet-${{ steps.latest_release.outputs.release }}-${{ steps.date.outputs.date }}"
      shell: bash
    - name: Print version name
      run: echo ${{ steps.version_name.outputs.version }}
      shell: bash
    - name: Set boost version and toolset
      id: boost_info
      run: |
        echo "::set-output name=version::$BOOST_VERSION"
        echo "::set-output name=toolset::$BOOST_TOOLSET"
        echo "::set-output name=path::$BOOST_PATH"
      shell: bash
    
    # Retrieve caches
    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: |
          ~\AppData\Roaming\npm-cache
          **\node_modules
          autobetLib\node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**\package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache boost
      uses: actions/cache@v2
      id: cache-boost
      with:
        path: ${{steps.boost_info.outputs.path}}
        key: boost-${{steps.boost_info.outputs.version}}-${{steps.boost_info.outputs.toolset}}

    # Download and install boost
    - name: Install boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      uses: MarkusJx/install-boost@v1.0
      id: install-boost
      with:
        boost_version: ${{steps.boost_info.outputs.version}}
        toolset: ${{steps.boost_info.outputs.toolset}}
    
    # Build steps
    # Runs 'npm install' and 'npm run-script pack'
    # To install all dependencies and package the application
    - name: Run npm install
      run: npm install
    - name: Build
      run: npm run-script build
      env:
        BOOST_ROOT: ${{steps.boost_info.outputs.path}}
    - name: Package
      run: npm run-script pack
      env:
        GH_TOKEN: ${{ secrets.github_token }}
    
    # Upload the artifact
    - name: Upload unstable build
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.version_name.outputs.version }}
        path: dist/autobet.exe
